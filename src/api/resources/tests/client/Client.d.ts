/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as core from "../../../../core";
import * as RulebricksApi from "../../..";
export declare namespace Tests {
    interface Options {
        environment: core.Supplier<string>;
        apiKey: core.Supplier<string>;
    }
    interface RequestOptions {
        timeoutInSeconds?: number;
        maxRetries?: number;
    }
}
/**
 * Administrative operations for programmatically managing test suites for rules and flows
 */
export declare class Tests {
    protected readonly _options: Tests.Options;
    constructor(_options: Tests.Options);
    /**
     * Retrieves a list of tests associated with the flow identified by the slug.
     * @throws {@link RulebricksApi.NotFoundError}
     * @throws {@link RulebricksApi.InternalServerError}
     *
     * @example
     *     await rulebricksApi.tests.listTests("slug")
     */
    listTests(slug: string, requestOptions?: Tests.RequestOptions): Promise<RulebricksApi.ListTestsResponseItem[]>;
    /**
     * Adds a new test to the test suite of a flow identified by the slug.
     * @throws {@link RulebricksApi.BadRequestError}
     * @throws {@link RulebricksApi.NotFoundError}
     * @throws {@link RulebricksApi.InternalServerError}
     *
     * @example
     *     await rulebricksApi.tests.createTest("slug", {
     *         name: "Test 3",
     *         request: {
     *             "param1": "value1"
     *         },
     *         response: {
     *             "status": "success"
     *         },
     *         critical: true
     *     })
     */
    createTest(slug: string, request: RulebricksApi.CreateTestRequest, requestOptions?: Tests.RequestOptions): Promise<RulebricksApi.CreateTestResponse>;
    /**
     * Deletes a test from the test suite of a flow identified by the slug.
     * @throws {@link RulebricksApi.NotFoundError}
     * @throws {@link RulebricksApi.InternalServerError}
     *
     * @example
     *     await rulebricksApi.tests.deleteTest("slug", "testId")
     */
    deleteTest(slug: string, testId: string, requestOptions?: Tests.RequestOptions): Promise<RulebricksApi.DeleteTestResponse>;
}

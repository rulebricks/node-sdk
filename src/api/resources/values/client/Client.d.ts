/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as core from "../../../../core";
import * as RulebricksApi from "../../..";
export declare namespace Values {
    interface Options {
        environment: core.Supplier<string>;
        apiKey: core.Supplier<string>;
    }
    interface RequestOptions {
        timeoutInSeconds?: number;
        maxRetries?: number;
    }
}
/**
 * Operations for managing dynamic values referenced in rules
 */
export declare class Values {
    protected readonly _options: Values.Options;
    constructor(_options: Values.Options);
    /**
     * Retrieve all dynamic values for the authenticated user.
     * @throws {@link RulebricksApi.InternalServerError}
     *
     * @example
     *     await rulebricksApi.values.listDynamicValues({})
     */
    listDynamicValues(request?: RulebricksApi.ListDynamicValuesRequest, requestOptions?: Values.RequestOptions): Promise<RulebricksApi.ListDynamicValuesResponseItem[]>;
    /**
     * Update existing dynamic values or add new ones for the authenticated user.
     * @throws {@link RulebricksApi.BadRequestError}
     * @throws {@link RulebricksApi.InternalServerError}
     *
     * @example
     *     await rulebricksApi.values.update({})
     */
    update(request: Record<string, RulebricksApi.UpdateRequestValue>, requestOptions?: Values.RequestOptions): Promise<RulebricksApi.UpdateResponseItem[]>;
    /**
     * Delete a specific dynamic value for the authenticated user by its ID.
     * @throws {@link RulebricksApi.BadRequestError}
     * @throws {@link RulebricksApi.NotFoundError}
     * @throws {@link RulebricksApi.InternalServerError}
     *
     * @example
     *     await rulebricksApi.values.deleteDynamicValue({
     *         id: "id"
     *     })
     */
    deleteDynamicValue(request: RulebricksApi.DeleteDynamicValueRequest, requestOptions?: Values.RequestOptions): Promise<RulebricksApi.DeleteDynamicValueResponse>;
}

/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as core from "../../../../core";
import * as RulebricksApi from "../../..";
export declare namespace Decisions {
    interface Options {
        environment: core.Supplier<string>;
        apiKey: core.Supplier<string>;
    }
    interface RequestOptions {
        timeoutInSeconds?: number;
        maxRetries?: number;
    }
}
/**
 * Query highly detailed logs of prior rule executions within the last 15 days
 */
export declare class Decisions {
    protected readonly _options: Decisions.Options;
    constructor(_options: Decisions.Options);
    /**
     * Retrieve logs for a specific user and rule, with optional date range and pagination.
     * @throws {@link RulebricksApi.BadRequestError}
     * @throws {@link RulebricksApi.InternalServerError}
     *
     * @example
     *     await rulebricksApi.decisions.query({
     *         slug: "slug"
     *     })
     */
    query(request: RulebricksApi.QueryRequest, requestOptions?: Decisions.RequestOptions): Promise<RulebricksApi.QueryResponse>;
}

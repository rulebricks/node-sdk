/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as core from "../../../../core";
export declare namespace Flows {
    interface Options {
        environment: core.Supplier<string>;
        apiKey: core.Supplier<string>;
    }
    interface RequestOptions {
        timeoutInSeconds?: number;
        maxRetries?: number;
    }
}
export declare class Flows {
    protected readonly _options: Flows.Options;
    constructor(_options: Flows.Options);
    /**
     * Execute a flow by its slug.
     * @throws {@link RulebricksApi.BadRequestError}
     * @throws {@link RulebricksApi.InternalServerError}
     *
     * @example
     *     await rulebricksApi.flows.execute("slug", {
     *         "name": "John Doe",
     *         "age": 30,
     *         "email": "jdoe@acme.co"
     *     })
     */
    execute(slug: string, request: Record<string, unknown>, requestOptions?: Flows.RequestOptions): Promise<Record<string, unknown>>;
}

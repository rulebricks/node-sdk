/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Rulebricks from "../../api/index";
import * as core from "../../core";
import { SchemaFieldType } from "./SchemaFieldType";
import { SchemaFieldDefaultValue } from "./SchemaFieldDefaultValue";

export const SchemaField: core.serialization.ObjectSchema<serializers.SchemaField.Raw, Rulebricks.SchemaField> =
    core.serialization.object({
        key: core.serialization.string().optional(),
        show: core.serialization.boolean().optional(),
        name: core.serialization.string().optional(),
        description: core.serialization.string().optional(),
        type: SchemaFieldType.optional(),
        defaultValue: SchemaFieldDefaultValue.optional(),
        defaultComputedValue: core.serialization.string().optional(),
        transform: core.serialization.string().optional(),
    });

export declare namespace SchemaField {
    export interface Raw {
        key?: string | null;
        show?: boolean | null;
        name?: string | null;
        description?: string | null;
        type?: SchemaFieldType.Raw | null;
        defaultValue?: SchemaFieldDefaultValue.Raw | null;
        defaultComputedValue?: string | null;
        transform?: string | null;
    }
}

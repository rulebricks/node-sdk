/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as RulebricksApi from "../../api/index";
import * as core from "../../core";
import { StringValue } from "./StringValue";
import { NumberValue } from "./NumberValue";
import { BooleanValue } from "./BooleanValue";
import { ListValue } from "./ListValue";

export const DynamicValue: core.serialization.Schema<serializers.DynamicValue.Raw, RulebricksApi.DynamicValue> =
    core.serialization
        .union("type", {
            string: StringValue,
            number: NumberValue,
            boolean: BooleanValue,
            list: ListValue,
        })
        .transform<RulebricksApi.DynamicValue>({
            transform: (value) => value,
            untransform: (value) => value,
        });

export declare namespace DynamicValue {
    export type Raw = DynamicValue.String | DynamicValue.Number | DynamicValue.Boolean | DynamicValue.List;

    export interface String extends StringValue.Raw {
        type: "string";
    }

    export interface Number extends NumberValue.Raw {
        type: "number";
    }

    export interface Boolean extends BooleanValue.Raw {
        type: "boolean";
    }

    export interface List extends ListValue.Raw {
        type: "list";
    }
}

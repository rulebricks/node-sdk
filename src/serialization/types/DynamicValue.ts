/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Rulebricks from "../../api/index";
import * as core from "../../core";
import { RuleUsage } from "./RuleUsage";

export const DynamicValue: core.serialization.ObjectSchema<serializers.DynamicValue.Raw, Rulebricks.DynamicValue> =
    core.serialization.object({
        id: core.serialization.string(),
        name: core.serialization.string(),
        type: core.serialization.string(),
        value: core.serialization.unknown().optional(),
        usages: core.serialization.list(RuleUsage).optional(),
        accessGroups: core.serialization.list(core.serialization.string()).optional(),
    });

export declare namespace DynamicValue {
    export interface Raw {
        id: string;
        name: string;
        type: string;
        value?: unknown | null;
        usages?: RuleUsage.Raw[] | null;
        accessGroups?: string[] | null;
    }
}
